- title(@title)
- stylesheet('appointments')
- javascript('waitlists')

.span-16
  .span-15.prepend-1.mat.padding-top-10.padding-bottom-10
    .span-10
      -# waitlist providers
      %h3{:style => 'margin-bottom: 3px;'}
        = label_tag "search_provider", "Waitlist for", :class => 'big'
        = select_tag('search_provider', options_for_select(@providers.collect{ |o| [provider_display_name(o, current_user), "#{o.tableize}/#{o.id}"]}, "#{@provider.tableize}/#{@provider.id}"), :class => 'text')

    -# waitlist appointment states
    .span-5.last{:style => 'padding-top: 7px;'}
      #links
        - build_appointment_state_when_links(params, ['upcoming', 'canceled'], @state, :default => 'upcoming') do |link, separator|
          = link
          = separator
  
    .span-15.last
      %h3{:style => 'font-size: 1.3em;'}== Today is #{Time.now.to_s(:appt_day)}

  %hr.space

  .span-15.prepend-1
    - if @appointments.blank?
      %h2{:style => 'color: #5500BB;'}== The #{@state} waitlist is empty
    - else
      %h3{:style => 'color: #5500BB;'}= pluralize(@appointments.size, "#{@state} appointment")

  #waitlist
    - @appointments_by_provider.each do |provider, appointments|
      -# show provider name if showing more than 1 customer's appointments
      .span-8.prepend-1.last
        - if @anyone
          .provider.group[provider]
            = provider_display_name(provider, current_user)

      -# provider's waitlist appointments
      - reset_cycle
      = render(:partial => 'waitlist.html.haml', :locals => {:appointments => appointments})
      
      -# add space between appointment groups
      %hr.space


-# waitlist help
.span-7.prepend-1.last
  = render(:partial => 'waitlist_help', :locals => {:state => @state})

