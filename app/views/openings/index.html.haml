- title("Schedule an Apppointment")
- javascript('service_providers', 'openings', 'time_range_slider')
- stylesheet('appointments', 'calendar', 'datePicker')

-# service providers mapping services to schedulables
.span-16.service_providers.hide
  - @sps.each do |sp|
    .service_provider{:service_id => sp[0], :schedulable_id => sp[1], :schedulable_name => sp[2], :schedulable_type => sp[3]}

.span-16.services.hide
  - @sps.each do |sp|
    .service{:service_id => sp[0], :allow_custom_duration => sp[4], :service_duration => Duration.to_words(sp[5], :prepend => "Typically")}
          
- unless @daterange.blank?
  .span-15.prepend-1.append-1
    %h2.span-14.last
      -# show count of available timeslots
      = @free_appointments.blank? ? "No Available Timeslots" : pluralize(@free_appointments.size, 'Available Timeslots')
      = "for a #{@service.name}"

    .span-14.last
      - unless @free_appointments.blank?
        %h3== Pick a #{Duration.to_words(@duration).singularize} window below
        
    .span-14.last
      -# show daterange name
      %h3.calendar.date_range_name= @daterange.name(:with_dates => true)

    - cache(@openings_cache_key, :expires_in => 5.minutes) do
      .span-15.last#free_calendar
        = render(:partial => 'shared/calendar', :locals => {:total_days => @daterange.days, :start_day => @daterange.start_at, :today => DateRange.today, :markings => @calendar_markings})
      .span-14.last.appointments#free_appointments
        = render(:partial => 'appointments/free_appointments', :locals => {:appointments_by_day => @free_appointments_by_day, :service => @service})

    .span-14.last
      -# show waitlist link if the @show_waitlist flag is set
      - if @show_waitlist
        %h2= link_to "Notify me if there is an opening", waitlist_path(:subdomain => current_subdomain, :schedulable_type => @schedulable.tableize, :schedulable_id => @schedulable.id, :service_id => @service.id, :start_date => @daterange.to_url_param(:for => :start_date), :end_date => @daterange.to_url_param(:for => :end_date)), :class => 'notify waitlist'
    
.last{:class => @daterange ? "span-7" : "span-24"}
  .span-7.mat
    = render(:partial => 'openings/search', :locals => {:title => @daterange ? "Modify Your Search" : "Make an Appointment", :submit_text => @daterange ? "Search Again" : "Search", :schedulables => @schedulables, :schedulable => @schedulable, :services => @services, :service => @service, :duration => @duration, :when_range => @when, :time => @time, :size => @daterange ? :narrow : :wide})
  - if @daterange.blank? && !current_company.description.blank?
    .span-15.prepend-1.last
      = Sanitize.clean(current_company.description, Sanitize::Config::RELAXED)
  - else
    .last

  -#.span-7.last.sidebar.instructions
    -#= render(:partial => "openings/search_instructions", :locals => {:when_range => @when, :free_appointments => @free_appointments})
