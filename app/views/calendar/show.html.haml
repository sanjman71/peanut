- title("Schedules")
- stylesheet('appointments', 'calendar', 'jquery.timepickr')
- javascript('appointments', 'calendar', 'waitlists', 'messages', 'ui.timepickr', 'jquery.timepickr')
- today_prev_next = build_calendar_today_prev_next_links(@provider, @daterange)

.span-16.append-1
  .span-15.prepend-1.last.mat.padding-top-10
    .span-8
      %h3
        = label_tag "show_provider", "Schedule for", :class => 'big'
        = select_tag('show_provider', options_for_select(@providers.collect{ |o| [provider_display_name(o, current_user), "#{o.tableize}/#{o.id}"]}, "#{@provider.tableize}/#{@provider.id}"), :class => 'text')
      %h6{:style => 'margin-bottom: 20px; font-weight: normal;'}
        = link_to 'PDF Version', url_for(:format => 'pdf')
        == &nbsp;|&nbsp;
        = link_to 'Email PDF Schedule', '', :id => 'send_pdf'
      = render(:partial => 'calendar/send_pdf_dialog')
    .span-6.prepend-1.last
      #links
        - build_calendar_range_type_links(@provider, DateRange::RANGE_TYPES, @daterange.range_type, @daterange.start_at) do |link|
          = link + " | "
        = link_to "Date Range", '', :id => 'show_dates'
        %br
        == or
        %br
        = today_prev_next[:today_link]
      
      #dates.hide
        = render(:partial => 'shared/date_range', :locals => {:object => Appointment.new, :url => url_for(:action => 'search', :provider_type => @provider.class.to_s.tableize, :provider_id => @provider.id, :subdomain => current_subdomain), :submit_id => 'search_calendar_with_date_range_submit'})
      
  .span-14.prepend-1.last.padding-top-10
    = display_flash
    
  %hr.space

  .span-15.prepend-1.last#schedule_container
    .span-3
      =today_prev_next[:prev_link]
    .span-9.center_justify
      %h3.calendar.date_range_name= @daterange.name(:with_dates => true)
    .span-3.last.right_justify
      =today_prev_next[:next_link]

    -# show free, work calendar
    .span-15.last#free_work_calendar
      = render(:partial => 'shared/calendar.html.haml', :locals => {:daterange => @daterange, :markings => @calendar_markings})

    -# show summary of work and free appointments
    .span-15.last
      %h3.calendar.date_range_summary
        = @work_appointments.size > 0 ? pluralize(@work_appointments.size, 'Appointment') : "No Appointments"
        == and
        = @free_appointments.size > 0 ? pluralize(@free_appointments.size, 'Available Timeslot') : "No Available Timeslots"

    -# show free and work appointments
    .span-15.last#free_work_appointments
      = render(:partial => 'appointments/free_work_appointments', :locals => {:appointments_by_day => @appointments_by_day})

    -# add a waitlist message hidden form
    .last#send_message
      = render(:partial => 'messages/send_message', :locals => {:sender => current_user, :protocol => 'email', :hidden => true})

-# show add free time form if the user can update the providers calendar
- if current_user.has_privilege?('update calendars', @provider)
  = render(:partial => 'calendar/add_free_time', :locals => {:provider => @provider, :service => @free_service, :daterange => @daterange})
