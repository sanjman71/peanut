<script type="text/javascript">

  Event.observe(window, 'load', function(){
	  drawLocations();
  });

	Event.addBehavior({
		'.selectable:click' : function(e) { setSelected(this.id, this.readAttribute('lat'), this.readAttribute('lng'), this.readAttribute('idx')); },
		'.unselectable:click' : function(e) { notmapped(); }
	});

  function drawLocations() {
		$('notmapped').hide();
		$('map').show();
    $('regular_map_link').hide();
    if (GBrowserIsCompatible()) {
      var map = setup_map("map");
      var markers = setup_markers();
      if (markers)
      {
        setup_zoomLevel(map, markers);
        for (var i = 0; i < markers.length; i++) 
        {
          map.addOverlay(markers[i]);
        }
      }
      map.closeInfoWindow();
    }
  }

  function showAllLocations()
  {
    var map = setup_map("map");
		// remove the 'selected' class from all other element's 
		$$('.selected').each(function(e){ e.removeClassName('selected'); } );
    // close any open Info windows
    map.closeInfoWindow();
    // Zoom the map to the right level
    setup_zoomLevel(map, markers);
    // show the map
		$('notmapped').hide();
		$('map').show();
  }
  
  function bigMap()
  {
    $('map').removeClassName('regular_map').addClassName('big_map');
    $('notmapped').removeClassName('regular_notmapped').addClassName('big_notmapped');
    $('addressbox').hide();
    $('regular_map_link').show();
  }

  function regularMap()
  {
    $('map').removeClassName('big_map').addClassName('regular_map');
    $('notmapped').removeClassName('big_notmapped').addClassName('regular_notmapped');
    $('addressbox').show();
    $('regular_map_link').hide();
  }

	function setSelected(locationIDstring, lat, lng, idx) 
	{ 
	  var map = setup_map("map");
		// remove the 'selected' class from all other element's 
		$$('.selected').each(function(e){ e.removeClassName('selected'); } );
		// add the class 'selected' to the selected element 
    $(locationIDstring).addClassName('selected');
    // Open the info window and pan to the marker
		markers[idx].openInfoWindowHtml(info_loc[idx]);
		$('notmapped').hide();
		$('map').show();
	}

	function notmapped()
	{
		$$('.selected').each(function(e){ e.removeClassName('selected'); } );
    $('notmapped').show();
	  $('map').hide();
	}

  var info_loc = null;
  var markers = null;
  function setup_markers()
  {
    
    <%
    gc_locations = []
    draw_locations.each do |loc|
      if loc && loc.geocoded?
        gc_locations << loc
      end
    end
    %>
    info_loc = new Array(<%= gc_locations.size %>);
    markers = new Array(<%= gc_locations.size %>);
    <% 
    gc_locations.each_with_index do |loc, i| 
      if loc.geocoded? %>
        <%= "info_loc[#{i}] = '#{location_map_info(loc)}';" %>
        <%= "markers[#{i}] = createMarker(new GLatLng(#{loc.lat}, #{loc.lng}) , #{i}, '#{location_short_title_renderer(loc)}', info_loc[#{i}], false);" %>
      <% 
      end
    end %>
    <% if home_location && home_location.geocoded? %>
      <%= "markers.push(createMarker(new GLatLng(#{home_location.lat}, #{home_location.lng}) , 0, '#{location_short_title_renderer(home_location)}', '', true));" %>
    <% end  %>
    return markers;
  }
  
</script>
