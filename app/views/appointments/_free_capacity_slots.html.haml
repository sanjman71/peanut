- capacity_slots_by_day.each do |day, slots|
  .span-15.last.slots.date{:id => "slots_#{day.to_s(:appt_schedule_day)}", :style => 'padding-top: 5px;'}
    .span-12.calendar.date.wide
      = day.to_s(:appt_day)
    
    -# group slots by people
    - reset_cycle
    - slots.group_by { |slot| slot.free_appointment.provider }.each do |provider, slots|
      - slots.each do |slot|
        .span-15.last.free.slot[slot]{:class => cycle("", "shaded")}
          .span-15.last
            .span-5.provider
              %h4{:style => 'margin-left: 5px;'}= provider.name
            .span-4.time
              == #{slot.start_at.to_s(:appt_time)} - #{slot.end_at.to_s(:appt_time)}
            .span-6.last.location
              = show_location? ? slot.free_appointment.location.anand.name : "&nbsp;"
          .span-15.last{:style => 'margin-left: 5px;'}
            .span-2.pick_time
              = link_to "Pick a Time", ''
            .span-13.last.slider.hide
              = render(:partial => 'calendar/time_range_slider', :locals => free_slot_possible_start_times(slot, service.duration, :appt_start_minutes => current_company.preferences[:appt_start_minutes]))
          .span-15.last.book_it.hide{:style => 'margin-left: 5px;'}
            = link_to('Book It', "javascript:void(0)", :url => schedule_path(:subdomain => current_subdomain, :provider_type => provider.tableize, :provider_id => provider.id, :service_id => service.id, :duration => service.duration, :start_at => slot.start_at.to_s(:appt_schedule)), :class => 'bookit')
