.container
  .left
    .section_header
      %span.other_indexes
        - if @appointment.state == 'upcoming'
          -# upcoming appointments can be canceled
          = link_to 'Cancel', cancel_appointment_path(@appointment)
      %table.appointment_header
        %tr
          %td.what
            = @appointment.service.name
            == with
            = @appointment.resource.name
        %tr
          %td.when
            = @appointment.start_at.to_s(:appt_day_date_time)
        %tr
          %td.customer
            - unless @appointment.customer.blank?
              = link_to @appointment.customer.name, customer_path(@appointment.customer)
        %tr
          %td.confirmation
            == Confirmation code:
            = @appointment.confirmation_code
            
    .section_body
      -# check if the appointment is in a completed state
      - if @appointment.state == 'completed'
        .appointment_header
          == Checkout
        %p
        .appointment_details
          == checkout details ...
      
      -# notes flash message
      #note_flash
      
      -# appointment notes
      .new_note#new_note_container
        %p== Add a note about this appointment
        - form_remote_for(@note, :id => 'new_note', :class => 'new_note', :url => notes_path(:subdomain => @subdomain), :method => :post) do |f|
          = hidden_field(:note, :subject_id, :value => @appointment.id)
          = hidden_field(:note, :subject_type, :value => @appointment.class.to_s)
          = f.text_area(:comment, :rows => 3, :style => "width: 90%;")
          %p
          = f.submit 'Add note', :name => nil
      %p
      #notes_collection
        = render(:partial => 'notes/notes.html.haml', :locals => {:notes => @notes})
        
  - if @appointment.state == 'upcoming'
    -# upcoming appointments can be checked-out
    .right
      .col
        .sidebar_form
          .sidebar_header
            %h1
              == Checkout
            - form_for(@appointment, :url => checkout_appointment_path(@appointment), :method => :post, :html => {:id => 'checkout_form'}) do |f|
              .checkout
                %table
                  %tr
                    %td{:style => "font-size: 11px; padding-right: 5px;"}
                      == Price
                    %td{:style => "font-size: 11px;"}
                      = text_field_tag :checkout_price, nil
              %p
                = f.submit "Done", :name => nil
            
        
