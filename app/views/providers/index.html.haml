- title("Providers")
- stylesheet('users')
- javascript('users', 'providers')

.span-16
  .span-15.prepend-1.last.mat.shaded.padding-top-10.padding-bottom-10
    .span-7
      %h2== Staff
    .span-8.last
      -# show add provider links if the company plan allows it
      - if current_company.may_add_provider? and current_user.has_privilege?('create users', current_company)
        %h4{:style => 'padding-top: 5px; font-size: 1.2em;'}
          = link_to 'Add a user', new_provider_path, :class => 'add provider'
          == &nbsp;|&nbsp;
          = link_to 'Add a resource', new_resource_path, :class => 'add provider'
          == &nbsp;|&nbsp;
          = link_to 'Invitations', invitations_path, :class => 'add provider'
    .span-15
      -# show current plan usage
      - if current_company.may_add_provider?
        %span.provider.summary== The company has #{pluralize(current_company.providers_count, 'provider')}.  Your plan allows #{plan_limit_text(current_company.plan, 'provider').downcase}.
      - else
        %span.provider.summary.highlight== You are at your plan limit of #{pluralize(current_company.providers_count, 'provider')}.  You can use the following #{link_to('link', edit_subscription_path(current_company.subscription))} to upgrade your account.
    
  %hr.space

  .span-14.prepend-1.last
    = display_flash

  .span-14.prepend-1.append-1.last
    .highlight#flash

  - if @staff.size >0
    .span-16.last
      .span-7.prepend-1
        %h2== Staff
      #providers_pagination
        = render(:partial => 'providers_pagination', :locals => {:providers => @staff, :search_text => @search_text, :paginate => @paginate})
      #providers
        = render(:partial => 'providers', :locals => {:providers => @staff})

  / - if @resources.size > 0
  /   .span-16.last
  /     .span-7.prepend-1
  /       %h2== Resources
  /     #resources_pagination
  /       = render(:partial => 'resources_pagination', :locals => {:resources => @resources, :search_text => @search_text, :paginate => @paginate})
  /     #resources
  /       = render(:partial => 'providers', :locals => {:providers => @resources})

.span-8.last
  -# provider help
  .span-7.prepend-1.last
    = render(:partial => 'providers_help')

