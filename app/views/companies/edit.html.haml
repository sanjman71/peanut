- title("Edit")

/ First, turn on TinyMCE for use with the description field
- use_tiny_mce

.span-23.prepend-1.last.mat.shaded.padding-top-10
  %h2
    == Editing
    = @company.name

%hr.space

.span-14.prepend-1.last
  = display_flash

  = error_messages_for :company

.span-23.prepend-1.last.mat.padding-top-10
  %h2 Billing Plan
  .span-10
    = "You are currently subscribed to the <strong>#{@company.plan.name}</strong> plan."
    %br
    - if @company.subscription.start_billing_at
      = "Your first bill of #{number_to_currency(@company.plan.cost/100)} will be charged on #{@company.subscription.start_billing_at.to_date.to_s(:long)}."
    - elsif @company.subscription.next_billing_at
      = "Your next bill of #{number_to_currency(@company.plan.cost/100)} will be charged on #{@company.subscription.next_billing_at.to_date.to_s(:long)}."
    %br
    = link_to "Change subscription", edit_subscription_path(:subdomain => current_subdomain, :id => @company.subscription)
    %br
    = link_to "Update Credit Card information", edit_cc_subscription_path(current_company.subscription, :subdomain => current_subdomain)
  .span-10.prepend-1.last
    = render :partial => 'plans/plan', :object => @company.plan, :locals => { :price => (@company.plan.cost / 100) }


%hr.space

.span-23.prepend-1.last.mat.padding-top-10.padding-bottom-20
  %h2 Company Information
  - form_for(@company, :url => company_path(@company, :subdomain => current_subdomain)) do |f|

    .span-20.last
      .span-3
        %h3{:style => 'padding-top: 7px;'}== Timezone:
      .span-16.prepend-1.last
        = f.time_zone_select :time_zone, ActiveSupport::TimeZone.us_zones, {}, {:style => 'margin-top: 5px;', :class => 'select big'}
    .span-20.last.padding-bottom-10
      .span-20.last
        %h3== Slogan (shown in header on company pages):
      .span-20.last.slogan
        = f.text_field :slogan, :size => 80, :class => "span-20 last"
    .span-20.last
      .span-20.last
        %h3== Full description (shown on new appointments page):
      .span-20.last.description
        = f.text_area :description, :class => "tiny-mce-editor span-20 last"
    .span-20.last.padding-top-10
      = f.submit 'Update Company Information', :class => 'button big'
      == or
      = link_to 'Cancel', openings_path
      
%hr.space

.span-23.prepend-1.last.mat.padding-top-10.padding-bottom-20
  %h2 Company Preferences
  - form_for(@company, :url => company_path(@company, :subdomain => current_subdomain)) do |f|
    .span-20.last.padding-bottom-10
      .span-5
        %h4.bottom{:style => 'padding-top: 7px;'}== Time Horizon:
      .span-15.last
        = f.select :preferences_time_horizon, time_horizon_options, {:style => 'margin-top: 5px;', :class => 'select big'}
      .span-15.prepend-5.last.directions
        == Choose how far out you want people to be able to make appointments.
    .span-20.last.padding-bottom-10
      .span-5
        %h4.bottom{:style => 'padding-top: 7px;'}== Start Week On:
      .span-15.last
        = f.select :preferences_start_wday, start_wday_options, {:style => 'margin-top: 5px;', :class => 'select big'}
      .span-15.prepend-5.last.directions
        == When showing calendars, what day do you want to start your week
    .span-20.last.padding-bottom-10
      .span-20.last
        .span-5
          %h4.bottom{:style => 'padding-top: 7px;'}== Appointment Start Times:
        .span-15.last
          = f.select :preferences_appt_start_minutes, appt_start_minutes_options, {:style => 'margin-top: 5px;', :class => 'select big'}
      .span-15.prepend-5.last.directions
        == Choose when appointments can start, e.g. on the hour, on the hour and half-hours
    .span-20.last.padding-bottom-10
      .span-20.last
        .span-5
          %h4.bottom{:style => 'padding-top: 7px;'}== Customer Confirmations:
        .span-15.last
          = f.select :preferences_work_appointment_confirmation_customer, appt_confirmation_options, {:style => 'margin-top: 5px;', :class => 'select big'}
      .span-15.prepend-5.last.directions
        == Customers receive appointment confirmations
    .span-20.last.padding-bottom-10
      .span-20.last
        .span-5
          %h4.bottom{:style => 'padding-top: 7px;'}== Provider Confirmations:
        .span-15.last
          = f.select :preferences_work_appointment_confirmation_provider, appt_confirmation_options, {:style => 'margin-top: 5px;', :class => 'select big'}
      .span-15.prepend-5.last.directions
        == Providers receive appointment confirmations
    .span-20.last.padding-bottom-10
      .span-20.last
        .span-5
          %h4.bottom{:style => 'padding-top: 7px;'}== Manager Confirmations:
        .span-15.last
          = f.select :preferences_work_appointment_confirmation_manager, appt_confirmation_options, {:style => 'margin-top: 5px;', :class => 'select big'}
      .span-15.prepend-5.last.directions
        == Managers receive appointment confirmations
    .span-20.last.padding-bottom-10
      .span-20.last
        .span-5
          %h4.bottom{:style => 'padding-top: 7px;'}== Public/Private:
        .span-15.last
          = f.select :preferences_public, public_options, {:style => 'margin-top: 5px;', :class => 'select big'}
      .span-15.prepend-5.last.directions
        == Companies marked as public allow anyone to create appointments.
        %br
        == Companies marked as private allow only registered users to create appointments.
    .span-20.last.padding-top-10
      = f.submit 'Update Company Preferences', :class => 'button big'
      == or
      = link_to 'Cancel', openings_path
      
%hr.space

.span-23.prepend-1.last.mat.padding-top-10.padding-bottom-20
  %h2 Company Logo
  .span-23.last.padding-top-10
    .span-6
      - if @company.logo && @company.logo.id
        .span-6.last
          .span-6.last
            %h3 Current Logo:
          .span-6.last
            = image_tag @company.logo.image.url
          .span-6.last.padding-top-10
            - form_for @company, :url => company_path(@company, :subdomain => current_subdomain), :html => { :method => :put } do |f|
              - f.fields_for :logo do |lf|
                = lf.hidden_field :_delete, {:value => '1'}
                = lf.submit 'Delete', :class => 'button big'
      - else
        - @company.build_logo # It's important to build the logo before making it's fields_for form below, otherwise you get a nil.new_record? error. It's equally important only to do this if the logo doesn't already exist. If you do this when it does exist, you will over-write the existing logo.
        .span-6.last
          No logo uploaded yet.
    .span-16.last
      - form_for @company, :url => company_path(@company, :subdomain => current_subdomain), :html => { :multipart => true, :method => :put } do |f|
        .span-16.last.padding-top-10
          .span-5
            - if @company.logo && @company.logo.id
              %h3==Upload a new logo:
            - else
              %h3==Upload a logo:
          .span-11.last
            - f.fields_for :logo do |lf|
              = lf.file_field :image
        .span-16.last.padding-top-10
          = f.submit 'Upload', :class => 'button big'

%hr.space

.span-22.prepend-1.append-1.last.mat.padding-top-10.padding-bottom-10
  .span-22.last
    %h2
      %span{:style => 'padding-right: 5px;'}== Company Locations
      - if current_company.may_add_location?
        - if has_privilege?("update companies", current_company)
          = link_to "Add a Location", new_location_path, :class => 'add_address', :style => 'font-size: 13px;'
      - else
        = "You cannot add any additional locations on your current plan. #{link_to "Change Subscription", edit_subscription_path(current_company.subscription)}"
  .span-22.last
    - if @company.locations.empty?
      == You do not yet have any locations
    - else
      = render :partial => 'locations/locations', :object => @company.locations.paginate(:page => params[:locations_page]), :locals => {:locatable => @company}

%hr.space
